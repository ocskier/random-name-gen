{"version":3,"sources":["audio/clock-ticking-4.mp3","components/Audio/Audio.jsx","components/Card/Card.jsx","components/Header/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Audio","soundEl","ref","loop","src","ticking","colors","styles","card","minHeight","description","paddingTop","darkTxt","color","lightTxt","header","marginTop","red","backgroundColor","orange","yellow","olivegreen","teal","blue","violet","purple","pink","brown","grey","black","calc","x","y","window","innerHeight","innerWidth","trans","s","AnimatedCard","animated","Card","LearnerCard","useState","loading","setLoading","randomColor","setRandomColor","persons","randomPerson","setRandomPerson","useSpring","xys","props","set","useEffect","Math","floor","random","length","centered","raised","style","transform","interpolate","onMouseMove","clientX","clientY","onMouseLeave","Content","Header","Object","assign","Description","extra","className","Button","secondary","onClick","myInterval","clearInterval","current","pause","play","setInterval","width","Advertisement","unit","test","main","display","justifyContent","alignItems","App","useRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4901367.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clock-ticking-4.92099e0a.mp3\";","import ticking from '../../audio/clock-ticking-4.mp3';\r\n\r\nexport const Audio = ({ soundEl }) => {\r\n  return <audio ref={soundEl} loop src={ticking} />;\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Card } from 'semantic-ui-react';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nimport persons from '../../persons.json';\r\n\r\nconst colors = [\r\n  'red',\r\n  'orange',\r\n  'yellow',\r\n  'olivegreen',\r\n  'teal',\r\n  'blue',\r\n  'violet',\r\n  'purple',\r\n  'pink',\r\n  'brown',\r\n  'grey',\r\n  'black',\r\n];\r\n\r\nconst styles = {\r\n  card: {\r\n    minHeight: '30vh',\r\n  },\r\n  description: {\r\n    paddingTop: '2rem',\r\n  },\r\n  darkTxt: {\r\n    color: 'black',\r\n  },\r\n  lightTxt: {\r\n    color: 'white',\r\n  },\r\n  header: {\r\n    marginTop: '0.8rem',\r\n  },\r\n  red: {\r\n    backgroundColor: 'red',\r\n  },\r\n  orange: {\r\n    backgroundColor: 'orange',\r\n  },\r\n  yellow: {\r\n    backgroundColor: 'yellow',\r\n  },\r\n  olivegreen: {\r\n    backgroundColor: 'olivegreen',\r\n  },\r\n  teal: {\r\n    backgroundColor: 'teal',\r\n  },\r\n  blue: {\r\n    backgroundColor: 'blue',\r\n  },\r\n  violet: {\r\n    backgroundColor: 'violet',\r\n  },\r\n  purple: {\r\n    backgroundColor: 'purple',\r\n  },\r\n  pink: {\r\n    backgroundColor: 'pink',\r\n  },\r\n  brown: {\r\n    backgroundColor: 'brown',\r\n  },\r\n  grey: {\r\n    backgroundColor: 'grey',\r\n  },\r\n  black: {\r\n    backgroundColor: 'black',\r\n  },\r\n};\r\n\r\nconst calc = (x, y) => [\r\n  -(y - window.innerHeight / 2) / 20,\r\n  (x - window.innerWidth / 2) / 20,\r\n  1.1,\r\n];\r\nconst trans = (x, y, s) => `perspective(600px) scale(${s})`;\r\n\r\nconst AnimatedCard = animated(Card);\r\n\r\nexport const LearnerCard = ({ soundEl }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [randomColor, setRandomColor] = useState('blue');\r\n  const [randomPerson, setRandomPerson] = useState(persons[0]);\r\n  const [props, set] = useSpring(() => ({\r\n    xys: [0, 0, 1],\r\n  }));\r\n\r\n  useEffect(() => {\r\n    setRandomColor(colors[Math.floor(Math.random() * colors.length)]);\r\n  }, [setRandomColor]);\r\n\r\n  const start = () => {\r\n    if (window.myInterval) {\r\n      clearInterval(window.myInterval);\r\n      window.myInterval = 0;\r\n      setLoading(false);\r\n      soundEl.current.pause();\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    soundEl.current.play();\r\n    window.myInterval = window.setInterval(() => {\r\n      setRandomColor(colors[Math.floor(Math.random() * colors.length)]);\r\n      setRandomPerson(persons[Math.floor(Math.random() * persons.length)]);\r\n    }, 300);\r\n  };\r\n\r\n  return (\r\n    <AnimatedCard\r\n      centered\r\n      raised\r\n      style={{ ...styles.card, transform: props.xys.interpolate(trans) }}\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n    >\r\n      <Card.Content style={styles[randomColor]}>\r\n        <Card.Header\r\n          style={Object.assign(\r\n            {},\r\n            styles.header,\r\n            randomColor === 'yellow' ||\r\n              randomColor === 'teal' ||\r\n              randomColor === 'violet' ||\r\n              randomColor === 'pink' ||\r\n              randomColor === 'orange'\r\n              ? styles.darkTxt\r\n              : styles.lightTxt\r\n          )}\r\n        >\r\n          {randomPerson}\r\n        </Card.Header>\r\n        <Card.Description\r\n          style={Object.assign(\r\n            {},\r\n            styles.description,\r\n            randomColor === 'yellow' ||\r\n              randomColor === 'teal' ||\r\n              randomColor === 'violet' ||\r\n              randomColor === 'pink' ||\r\n              randomColor === 'orange'\r\n              ? styles.darkTxt\r\n              : styles.lightTxt\r\n          )}\r\n        >\r\n          Who's It going to be ?\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div className=\"ui two buttons\">\r\n          <Button\r\n            secondary\r\n            color=\"green\"\r\n            onClick={start}\r\n            loading={loading ? loading : null}\r\n          >\r\n            Start\r\n          </Button>\r\n        </div>\r\n      </Card.Content>\r\n    </AnimatedCard>\r\n  );\r\n};\r\n","import { Advertisement } from 'semantic-ui-react';\r\n\r\nconst styles = {\r\n  header: {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Advertisement\r\n      style={styles.header}\r\n      unit=\"top banner\"\r\n      test=\"Random Cold Caller\"\r\n    />\r\n  );\r\n};\r\n","import { useRef } from 'react';\n\nimport Audio from './components/Audio';\nimport Card from './components/Card';\nimport Header from './components/Header';\n\nimport './App.css';\n\nconst styles = {\n  main: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 'calc(100vh - 180px)',\n  },\n};\n\nfunction App() {\n  const soundEl = useRef(null);\n  return (\n    <div className=\"App\">\n      <Header />\n      <div style={styles.main}>\n        <Audio soundEl={soundEl} />\n        <Card soundEl={soundEl} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}